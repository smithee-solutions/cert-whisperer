Create a config file

Create a JSON file with configuration details.

run configure-CA or cert-whisper


Configuration File Parameters:

ca-template - template file used to create openssl config file
cert-command - command performed by cert-whisper.  "issue" or "sign"
cert-name    - name used for certificate files
download - directory in which to create OpenSSL CA files.  Value is pathname.
nopw     - Don't set private key password.  No value.
privkey  - Pass phrase for private key.
subject  - subjectName of cert being issued (might be CA)
san-email - for subjectAltName email (can only have one)

// days 32
// SCRUB
// RECREATE

Examples

{
  "download" = "test",
  "nopw"
}

{
  "download" = "test",
  "privkey" = "password"
}


ecc curves can be used too see sample-ecc


how-to make top level CA
========================

create a json file to configure the CA.  

set "download" to name the ca (also
creates a directory.)

set "subject" as the subjectName of the CA.

set "ca-lifetime" as the lifetime of the CA certificate.

Example:

  {
    "download" : "example_CA",
    "subject" : "/C=XX/ST=state/L=locality/O=organization/OU=unit-1/CN=example_CA",
    "ca-lifetime" : "32",
    "#" : "_end"
  }

Note: per https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#User-assigned_code_elements we assume it is legitimate to use C=XX as an example country code in
documentation.

After you configure the json file, run configure-CA against it:

  configure-CA example_CA.json

At this point example_CA is a directory in your current directory and
it contains a fully configured openssl CA.  The root certificate is 
example_CA/cacert.pem.


how-to make intermediate CA

t.b.d.

how-to make smime subscriber cert

t.b.d.

how-to make npe subscriber cert

t.b.d.

how-to support a CDP or OCSP Responder

t.b.d.

how-to tune the certificate extensions that are generated

t.b.d.


Samples
=======

There are sample files under doc/samples.

See cw-sample-ecc.json for sample configuration to use ecc.

see zzz2 for sample configuration to use RSASSA-PSS signatures

see zzz3 for sample configuration to satisfy 2018-era CABF/Browser Monopoly

